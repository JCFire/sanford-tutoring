define("comboBoxInput",["lodash","react","core","santaProps","textCommon"],function(a,b,c,d,e){"use strict";var f=c.compMixins;function g(a){return b.DOM.option({value:a.value,default:a.default,style:a.style,ref:a.ref||a.value,disabled:a.disabled,key:a.key},a.text)}function h(b,c,d,e){var f=false;var h=a.map(b,function(b,c){f=f||b.value===d;return g(a.assign({default:b.value===d,key:c},b))});var i;if(c.placeholder){i=a.assign({default:!f,style:{display:"none"},className:e,ref:"placeholder",key:"placeholder-"+c.placeholder.value},c.placeholder)}else{i=a.assign({default:!f,style:{display:"none"},className:e},{text:"",value:"",ref:"placeholder",key:"noPlaceholder"})}h.unshift(g(i));return h}function i(b){return a.get(b,["compProp","placeholder","value"])}function j(a){return a.compData.value||i(a)}function k(a){return{$validity:a.errorMessage?"invalid":"valid"}}function l(b,c){return b.value===a.get(c,"placeholder.value")}function m(b,c,d){var e=a.get(c,"options",[]);if(a.get(b,"required")&&e.length>0){var f=a.some(e,{value:a.get(d,"value")});var g=f&&!l(d,b);return!g}return false}function n(b){return!!a.get(b,"customValidity")}function o(a,b,c){return{customError:n(a),valueMissing:m(b,c,a),valid:!(n(a)||m(b,c,a))}}function p(b,c){return{validity:o(b,c.props,c.data),validationMessage:a.get(b,"customValidity",""),valid:b?b.$validity==="valid":true}}return{displayName:"ComboBoxInput",mixins:[f.skinBasedComp,f.runTimeCompData,e.textScaleMixin,c.compMixins.inputFocusMixin,f.compStateMixin(p)],propTypes:{compData:d.Types.Component.compData.isRequired,compProp:d.Types.Component.compProp.isRequired,componentViewMode:d.Types.RenderFlags.componentViewMode,onSelectionChange:b.PropTypes.func,shouldResetComponent:d.Types.RenderFlags.shouldResetComponent,errorMessage:b.PropTypes.string},statics:{useSantaTypes:true,behaviors:a.assign({change:{methodName:"validate"},setCustomValidity:{methodName:"setCustomValidity",params:["customValidity"]}},c.compMixins.inputFocusMixin.INPUT_FOCUS_BEHAVIORS)},focus:function(){this.refs.collection.focus()},blur:function(){this.refs.collection.blur()},validate:function(){if(this.props.compProp.required&&this.props.compData.options.length>0){var a=!m(this.props.compProp,this.props.compData,this.state);this.setState({valid:a});return a}this.handleAction("validate");if(!this.state.valid){this.setState({valid:true})}return true},getInitialState:function(){return a.assign(k(this.props),{customValidity:"",value:j(this.props),defaultValue:this.props.compData.value,placeholderValue:i(this.props),valid:true})},setCustomValidity:function(a){this.setState({customValidity:a})},componentWillReceiveProps:function(b){var c=k(b);var d=b.compData.value!==this.state.value;var e=i(b)!==this.state.placeholderValue;if(d||e||this.props.onSelectionChange){a.assign(c,{value:j(b)})}if(b.shouldResetComponent!==this.props.shouldResetComponent){c.customValidity=""}this.setState(c)},onChange:function(b,c){var d=b.target.value;this.updateData({value:d});if(this.props.onSelectionChange){b.type="selectionChanged";b.payload=a.find(this.props.compData.options,{value:d})||{};this.props.onSelectionChange(b,c)}else{this.setState({value:d,valid:!!d})}this.handleAction("change",b)},onFocus:function(a){this.handleAction("focus",a)},onBlur:function(a){this.handleAction("blur",a)},componentDidUpdate:function(a,b){if(b.customValidity!==this.state.customValidity){this.refs.collection.setCustomValidity(this.state.customValidity)}},getSkinProperties:function(){var b={};b[this.props.compProp.textAlignment+"-direction"]=true;var c={};c["padding"+a.capitalize(this.props.compProp.textAlignment)]=this.props.compProp.textPadding;var d=this.props.compData.options;return{"":{onBlur:this.onBlur,className:this.classSet(b),"data-disabled":!!this.props.compProp.isDisabled,"data-error":!this.state.valid&&this.props.componentViewMode!=="editor","data-preview":a.isFunction(this.getComponentPreviewState)&&this.getComponentPreviewState()},collection:{defaultValue:-1,disabled:!!a.get(this.props,"compProp.isDisabled"),children:h(d,this.props.compProp,this.state.defaultValue,this.classSet({"placeholder-style":true})),value:this.state.value,onChange:this.onChange,onFocus:this.onFocus,style:a.merge(c,this.getFontSize()),className:this.isPlaceholderSelected()?this.classSet({"placeholder-style":true}):"","data-preview":a.isFunction(this.getComponentPreviewState)&&this.getComponentPreviewState()},errorMessage:{children:[this.props.errorMessage]}}},isPlaceholderSelected:function(){return l(this.state,this.props.compProp)}}});